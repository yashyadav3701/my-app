{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capatilize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","rows","value","onChange","event","target","newtext","showAlert","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.abb45dd2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatilize=(word)=>{\r\n        var lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capatilize(props.alert.type)} : </strong> {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'light':'dark'} Mode</label>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:'myTitle',\r\n    aboutText:'myText'\r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const [text,setText]=useState(\"Enter Text here\");\r\n\r\n    const handleOnClick= ()=>{\r\n        // console.log(\"Upper case is cllicked\");\r\n        var newtext=text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Successfully converted to upper case!!\",\"success\");\r\n    }\r\n    const handleLoClick= ()=>{\r\n      // console.log(\"Upper case is cllicked\");\r\n      var newtext=text.toLowerCase();\r\n      setText(newtext);\r\n      props.showAlert(\"Successfully converted to lower case!!\",\"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n      var newtext='';\r\n      setText(newtext);\r\n      props.showAlert(\"Text Successfully Cleared!!\",\"success\");\r\n    }\r\n    const handleOnChange= (event)=>{\r\n        // console.log('text is changed');\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy=()=>{\r\n      var text=document.getElementById('box1');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text Successfully Copied to Clipboard!!\",\"success\");\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      var newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Successfully removed extra spaces!!\",\"success\");\r\n    }\r\n  return (\r\n    <>\r\n    <div className=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h2>{props.heading}</h2>\r\n    <textarea className=\"form-control my-3\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"box1\" rows=\"8\" value={text} onChange={handleOnChange}>\r\n    </textarea>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={handleOnClick}>Lower To UpperCase</button>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={handleLoClick}>Lower To LowerCase</button>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={handleCopy}>Copy Text</button>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(' ').length} words and {text.length} characters</p>\r\n      <p>{0.008*text.split(' ').length} time required</p>\r\n      <h2>Summary :</h2>\r\n      <p>{text.length>0?text:\"Enter Text above to Preview \"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#282840';\n      showAlert(\"Dark mode has been Enabled \",\"success\");\n      document.title='TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title='Earn';\n      // }, 500);\n      // setInterval(()=>{\n      //   document.title=\"Now\";\n      // },1000);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been Enabled \",\"success\");\n      document.title='TextUtils - Light Mode';\n      }\n  } \n  const [alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"about\" /> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" toggleMode={toggleMode} mode={mode}/>\n    <Alert alert={alert}/>\n    <div className='container my-3'>\n    {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n            <Textarea heading=\"Enter Text Below :\" mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}